#welcome
welcome=welcome

# common
boolean=boolean
classname=class name
commandname=command name
destination=destination
elapsedtime=elapsed time
exception.occurred=an exception occurred
exception=exception
export.overwrite=overwrite the file in the given path if necessary.
exportview.from=Source node 
exportview.to=Target file where the xml view will be stored
exportview.skipBinary=if it's true the binary properties will be serialized as if they are empty
exportview.noRecurse=if it's true it doesn't include the child nodes
file=file
flag=flag
folder=folder
fs.path=file system path
from=from
in=in
jcr.path=jcr path
message=message
mixin.name=mixin name
name.pattern=name pattern
unknown.command=unknown command
node.name=node name
node.path=node path
not.connected=not connected
not.logged.in=not logged in
overwrite=overwrite
running=running
show.max.items=max number of items to show
stmt=statement
source=source
to=to
var.name=variable name

# ---------------------------------
# CLI
# ---------------------------------

# prompt
prompt.display.stacktrace=Do you want to see the stack trace? [y/n]

# source
source=Execute the script at the given file

# ---------------------------------
# JCR COMMANDS
# ---------------------------------

# addmixin
addmixin=Add a mixin node type to the given node
addmixin.mixin=mixin name 

# addnode
addnode=Add a node to the current working node

# clear workspace
clearworkspace=Clear the Workspace by removing all the nodes and properties. 

# collect
collectitems=Collect items under the current working node
collectitems.target=target variable where the collected items will be stored

# collect nodes
collectnodes=Collect nodes under the current working node
collectnodes.target=target variable where the collected nodes will be stored

# collect properties
collectproperties=Collect properties under the current working node
collectproperties.target=target variable where the collected properties will be stored

#connect 
connect=Connect to a remote repository through jcr-rmi
connect.url=remote server url 

# copy
copy=copy a node
copy.from=source, absolute or relative path
copy.to=destination, only absolute path

# current node
currentnode=Change the current working node to the given path 

# export doc view
exportdocview=Serialize the node to the given file using the document view format

# export fs
exportfilesystem=Export node of type nt:file and nt:folder to the file system.

# export property
exportproperty=Export the given property to the file system
exportproperty.idx=value index to export

# export sys view
exportsysview=Serialize the node to the given file using the system view format

# import fs
importfilesystem= \
This command imports data from the file system. \n \
If the given path refers to a file, it's imported \
to the repostitory to a node of type nt:file under \
the current working node. \
If the given path refers  to a folder, all the tree under the given folder is \
imported.

# import xml
importxml=Import the given xml file either in system or documen view to the repository
importxml.uuidBehaviour=uuid creation behaviour 

# login
login=login to the current repository.
login.u=user name [default = anonymous]
login.p=password  [default = anonymous]
login.w=workspace

#logout
logout=logout from the current repository.

#move
move=move a node
move.from=source, absolute or relative path
move.to=destination, only absolute path

# refresh
refresh=Refresh the session to reflect the current saved state.
refresh.keepChanges=keep or discard the changes flag

# remove item
remove=Remove the item at the given path.

# remove items
removeitems=Remove any item under the current working node that match the given name pattern.

# removemixin
removemixin=Remove a mixin from the given node

# rename
rename=rename the child node with the given name
rename.from=source node
rename.to=destination node 

# Save session
save=Save the current session 

# Save node
savenode=Save the current working node 

# set multivalue property
setmultivalueproperty=Set a multivalue property.
setmultivalueproperty.regExp=Regular expression used to split the value into tokens.

# set property
setproperty=Set the given value to the property.
setproperty.name=property name
setproperty.value=property value
setproperty.type=property type. Default is String.

# set property
setpropertyfromfile=Set the property's value with the content of the given path.
setpropertyfromfile.path=path to the file

# sql query
sql=SQL query
sql.statement=SQL statement
sql.target=target variables to store the nodes included in te query result

# start jackrabbit
startjackrabbit=Start a local Jackrabbit instance
startjackrabbit.config=Repository config file, usually called repository.xml
startjackrabbit.home=Repository location

# stop jackrabbit
stopjackrabbit=Stop the Jackrabbit instance in use

# ---------------------------------
# INFO COMMANDS
# ---------------------------------

# help
help=Show available commands
help.command=[optional] Command help

# ls items
lsitems=Lists nodes and properties under the current node
lsitems.pattern=filter pattern

# lscollec
lscollect=List collected items under the current node 
lscollect.namepattern=[optional] name pattern

# lsnodes
lsnodes=List nodes under the current node
lsnodes.nsize=Show the number of nodes under the current working node
lsnodes.psize=Show the number of properties under the current working node
lsnodes.rsize=Show the number of references that point to the current working node
lsnodes.m=Show the full list o mixin that apply to the current working node
lsnodes.v=Show whether the current working node is versionable
lsnodes.l=Show whether the current working node is lockable
lsnodes.r=Show whether the current working node is referenceable
lsnodes.locked=Show whether the current working node is locked
lsnodes.hasLock=Show whether the current working node has a lock
lsnodes.new=Show whether the current working node is new
lsnodes.mod=Show whether the current working node is modified
lsnodes.path=Show the full path to the node

# ls collect nodes
lscollectnodes=List collected nodes under the current node
lscollectnodes.namepattern=[optional] name pattern


# ls collect properties
lscollectproperties=List collected properties under the current node
lscollectproperties.namepattern=[optional] name pattern

# lsproperties
lsproperties=List properties under the current node
lsproperties.namepattern=[optional] name pattern

# lsreferences
lsreferences=List references to the given node.

# cat property 
cat=Display the content of a property, or the content of a node of type nt:file or nt:resource.
cat.idx=index of the value to show

# dump
dump=Dump stored data from the current working node

# xpathquery
xpathquery=xpath query
xpathquery.statement=statement
Index: src/main/java/org/apache/jackrabbit/core/SessionImpl.java
===================================================================
--- src/main/java/org/apache/jackrabbit/core/SessionImpl.java	(revision 698201)
+++ src/main/java/org/apache/jackrabbit/core/SessionImpl.java	(working copy)
@@ -752,7 +752,8 @@
             try {
                 if (targetId == null) {
                     targetId = hierMgr.resolvePath(targetPath);
-                    if (targetId == null) {
+
+                    if (targetId == null || targetId.denotesNode()) {
                         // property does not exist yet,
                         // check WRITE permission on parent
                         if (parentPath == null) {
@@ -760,17 +761,23 @@
                         }
                         if (parentId == null) {
                             parentId = hierMgr.resolveNodePath(parentPath);
-                            if (parentId == null) {
+                            if (parentId == null || !parentId.denotesNode()) {
                                 // parent does not exist, throw exception
                                 throw new AccessControlException(SET_PROPERTY_ACTION);
                             }
                         }
-                        accessMgr.checkPermission(parentId, AccessManager.WRITE);
-                    } else {
-                        // property does already exist,
-                        // check WRITE permission on target
-                        accessMgr.checkPermission(targetId, AccessManager.WRITE);
+
+                        // JCR-1743: Session.checkPermission: add_node and
+                        // set_property evaluation are not handled differently
+                        //
+                        // Generate a virtual property id (that does not map
+                        // to an existing item) and use that to check WRITE
+                        // permission.
+                        Name name = targetPath.getNameElement().getName();
+                        targetId = new PropertyId((NodeId) parentId, name);
                     }
+
+                    accessMgr.checkPermission(targetId, AccessManager.WRITE);
                 }
             } catch (AccessDeniedException re) {
                 // otherwise the RepositoryException catch clause will

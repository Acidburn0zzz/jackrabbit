<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>
  <properties>
    <author email="christophe.lombart@gmail.com">Christophe Lombart</author>
    <title>The Object Content Manager API</title>
  </properties>
  <body>
    <section name="Jackrabbit OCM">
       <subsection name="Basic operations">
	    <p>
        When you have <a href="../engine-introduction.html">created a new
        Object Content Manager</a> in your application, you can use this
        component to insert, update, delete and retrieve objects.
        The class 'Folder' used in the following sections should be
        associated to a class-descriptor defined in the mapping descriptor.
      </p>
      <p>
        This page describes only the main Object Content Manager methods.
        You can see the javadoc to get more information on the API.
      </p>
      </subsection>
      <subsection name="Insert">
<source>
Folder folder =  new Folder();
folder.setPath("/myfolder");
folder.set...(); // call the setter methods

ocm.insert(myFolder);

</source>
      </subsection>

      <subsection name="Retrieve and update an object">
<source>
Folder folder = (Folder) ocm.getObject("/myfolder");
folder.set...(); // call the setter methods

ocm.update(myFolder);

</source>
      </subsection>

      <subsection name="Delete">
<source>
ocm.remove("/test");
</source>
      </subsection>

      <subsection name ="Save the latest modification">
        <p>
          After some inserts, deletes and/or updates, you can call
          the method <code>ocm.save()</code> to apply your
          changes into the JCR repository.
        </p>
	<p>
	  With Jackrabbit, it is also possible to run the modifications inside a transaction. 
	  See the class <code>org.apache.jackrabbit.ocm.transaction.jackrabbit.UserTransactionImpl</code> defined in the unit tests.
	  <source>
import javax.transaction.UserTransaction;
import org.apache.jackrabbit.ocm.transaction.jackrabbit.UserTransactionImpl;
	  
UserTransaction utx = new UserTransactionImpl(session);
	  
// start transaction
utx.begin();

ocm.remove("/test");	  
ocm.remove("/test2");

utx.commit(); 
          </source>
	</p>	
      </subsection>
    </section>
  </body>
</document>

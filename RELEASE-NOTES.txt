Release Notes -- Apache Jackrabbit -- Version 1.4

Introduction
------------

Apache Jackrabbit is a fully conforming implementation of the Content
Repository for Java Technology API (JCR). A content repository is a
hierarchical content store with support for structured and unstructured
content, full text search, versioning, transactions, observation, and
more. Typical applications that use content repositories include content
management, document management, and records management systems.

Apache Jackrabbit 1.4 is an incremental feature release. The most notable
changes in this release are ... Many smaller improvements and bug fixes
are also included.

See the Apache Jackrabbit website at http://jackrabbit.apache.org/ for more
information.

Changes in this release
-----------------------

New features

Improvements

Bug fixes

Release Contents
----------------

The release consists of a single source archive and a number of
pre-compiled binary component archives.

    * Jackrabbit source code (jackrabbit-1.4-src.jar)

        The main source archive contains a "jackrabbit-1.4-src" directory
        with the full released source code and build environment. Use the
        following commands (or the equivalent in your system) to build all
        the released components with Maven 2:

          $ jar xf jackrabbit-1.4-src.jar
          $ cd jackrabbit-1.4-src
          $ mvn install

The components contained in the released source archive are listed below
(with the pre-compiled binary archives in parenthesis):

    * Jackrabbit API (jackrabbit-api-1.4.jar)

        Interface extensions that Apache Jackrabbit supports in
        addition to the standard JCR API.

    * Jackrabbit JCR Commons (jackrabbit-jcr-commons-1.4.jar)

        General-purpose classes for use with the JCR API.

    * Jackrabbit JCR Tests (jackrabbit-jcr-tests-1.4.jar)

        Set of JCR API test cases designed for testing the compliance
        of an implementation. Note that this is not the official JCR TCK!

    * Jackrabbit Core (jackrabbit-core-1.4.jar)

        Core of the Apache Jackrabbit content repository implementation.

    * Jackrabbit Index Filters (jackrabbit-index-filters-1.4.jar)

        Text indexing filters for Jackrabbit. Includes example filters
        for Adobe PDF and MS Excel, PowerPoint, and Word.

    * Jackrabbit JCR-RMI (jackrabbit-jcr-rmi-1.4.jar)

        RMI network layer for the JCR API.

    * Jackrabbit WebDAV Library (jackrabbit-webdav-1.4.jar)

        Interfaces and common utility classes used for building a
        WebDAV server or client.

    * Jackrabbit JCR Server (jackrabbit-jcr-server-1.4.jar)

        WebDAV servlet implementations based on JCR.

    * Jackrabbit Repository Classloader (jackrabbit-classloader-1.4.jar)

        Java classloader for loading classes from JCR content repositories.

    * Jackrabbit Web Application (jackrabbit-webapp-1.4.war)

        Deployable Jackrabbit installation with WebDAV support for JCR.

    * Jackrabbit JCA Resource Adapter (jackrabbit-jca-1.4.rar)

        J2EE Connector Architecture (JCA) resource adapter for Jackrabbit.

All files contain a README.txt file with more information. Note that
external runtime dependencies are only included for the war and rar
archives. Other dependencies can be downloaded either manually or
automatically using the Maven build system.

Each release file is accompanied by SHA1 and MD5 checksums and a PGP
signature. The public key used for the signatures can be found
in the KEYS file located in the parent directory.

Upgrading to Jackrabbit 1.3
---------------------------

Apache Jackrabbit 1.3 is fully compatible with the previous 1.x releases.
A previous Apache Jackrabbit 1.x installation can be upgraded by replacing
the relevant jar files with the new versions. No changes to repository
contents are needed.

See below for a more detailed description of the structural changes in
the Apache Jackrabbit 1.2 release.

Upgrading to Jackrabbit 1.2
---------------------------

The most notable effect of the component restructuring in the 1.2 release
was that the previous jackrabbit-core component has been split in three
pieces: jackrabbit-api, jackrabbit-jcr-commons, and jackrabbit-core. Thus
you need to replace the previous jackrabbit-core-1.x.jar file with the
three new jar archives.

The structure of the WebDAV components have also changed. WebDAV support
now consists of the webapp component jackrabbit-webapp and the libraries
jackrabbit-webdav and jackrabbit-jcr-server.

The Apache Lucene dependency used for full text indexing has been upgraded
to version 2.0 in this release. Lucene 2.0 is able to continue using
existing index files, but you can also manually recreate the index with
Lucene 2.0 extensions by removing the "index" directories of a closed
repository. Jackrabbit will automatically re-index content when the
repository is next started.

Also the Apache Derby dependency has been upgraded to version 10.2.
Like Lucene, the new Derby version can keep using existing database files.
New repositories and workspaces will however be created using extensions
and improvements introduced in the 10.2 version.

Known issues in this release
----------------------------

The known issues in this release are listed below:

  [JCR-18] - Multithreading issue with versioning
  [JCR-43] - Restore on nodes creates same-name-sibling of ...
  [JCR-320] - BinaryValue equals fails for two objects with ...
  [JCR-385] - ClassCastException when executing union queries
  [JCR-392] - Querying element by number does not work
  [JCR-406] - If header evaluation compliance problems
  [JCR-435] - Node.update() does not work correct for SNS
  [JCR-449] - inconsistency in internal version items during commits
  [JCR-509] - TCK:NodeTest#testNodeIdentity fails if versioning ...
  [JCR-517] - Reserved status of namespace jcr not enforced
  [JCR-522] - XPath parser too tolerant
  [JCR-537] - Failure to remove a versionable node
  [JCR-538] - failing Node.checkin() or Node.checkout() might leave ...
  [JCR-566] - Versioning bug with restore and transactions
  [JCR-575] - unicode escapes in files generated by JJTree
  [JCR-591] - XPath position function does not work
  [JCR-607] - Importing XML at root level using a session from JCA ...
  [JCR-609] - Empty custom_nodetypes.xml after restart
  [JCR-622] - Auto Reconnect for RepositoryAccessServlet
  [JCR-625] - Memory is not freed up when jackrabbit-server war is ...
  [JCR-639] - Allow modification of OPV=IGNORE items even if parent ...
  [JCR-643] - Own AccessManager + VersionManager : AccessDenied problem
  [JCR-672] - Deadlock on concurrent save/checkin operations possible
  [JCR-674] - String properties with invalid XML characters export ...
  [JCR-690] - Nodes' and properties' names with invalid XML ...
  [JCR-699] - Clustering: re-registration of nodetypes is not ...
  [JCR-709] - ArrayStoreException is thrown when jcr:deref() is used ...
  [JCR-714] - TCK: Test root path not escaped when used in XPath queries
  [JCR-752] - Test cases leak sessions
  [JCR-759] - handling of namespace registrations in AbstractJCRTest
  [JCR-769] - Unable to login with two different Credentials to the same ...
  [JCR-774] - TCK: Test that expect that modifications made by Session1 ...
  [JCR-777] - Order by clause using child axis does not throw ...
  [JCR-778] - Error on query initialization - intermittent
  [JCR-789] - PathElement.equals doesn't handle INDEX_UNDEFINED
  [JCR-790] - Possible deadlock during concurrent operations on ...
  [JCR-799] - AbstractJournal doesn't create deep paths for revision files
  [JCR-811] - SetPropertyAssumeTypeTest check for non-protected string ...
  [JCR-812] - TCK: RestoreTest.testRestoreLabel
  [JCR-813] - TCK: testSaveMovedRefNode
  [JCR-823] - NamespaceRegistryTest makes assumptions about legal names
  [JCR-826] - Node.testAddNodeConstraintViolationExceptionUndefinedNode...
  [JCR-832] - BundleDBPersistenceManager does not free blobStore resources
  [JCR-843] - XPath does not work with sub-axes
  [JCR_848] - javacc-maven-plugin version in jackrabbit-core pom file
  
See the issue tracker at http://issues.apache.org/jira/browse/JCR for
more details.

<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  The ASF licenses this file to You
   under the Apache License, Version 2.0 (the "License"); you may not
   use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
  -->
<document>
  <properties>
    <title>Building Jackrabbit</title>
  </properties>
  <body>
    <section name="Building Jackrabbit">
      <p>
        As the Jackrabbit project has yet to make its first binary releases,
        you need to build Jackrabbit from sources to install it. The
        <a href="http://maven.apache.org/maven-1.x/">Maven</a> build environment
        makes it very easy to build Jackrabbit.
      </p>
      <p>
        The first step in building Jackrabbit is to check out the Jackrabbit
        sources from the <a href="http://subversion.tigris.org/">Subversion</a>
        source repository at
        <a href="http://svn.apache.org/repos/asf/jackrabbit/">http://svn.apache.org/repos/asf/jackrabbit/</a>.
        The trunk of the source repository is divided in several parts:
      </p>
      <dl>
        <dt><a href="http://svn.apache.org/repos/asf/jackrabbit/trunk/jackrabbit/">trunk/jackrabbit</a></dt>
        <dd>
          This is the main Jackrabbit source tree that contains everything you
          need for a fully functional Jackrabbit installation. This source tree
          is often referred to as "the Jackrabbit core". In addition to the
          main Jackrabbit jar library, this source tree is also used for the
          "jackrabbit-commons" utility library used also in other JCR tools
          and implementations.
        </dd>
        <dt><a href="http://svn.apache.org/repos/asf/jackrabbit/trunk/contrib/">trunk/contrib</a></dt>
        <dd>
          This is a collection of additional Jackrabbit modules and other
          contributed subprojects. See the individual contrib projects for
          installation and usage instructions.
        </dd>
        <dt><a href="http://svn.apache.org/repos/asf/jackrabbit/trunk/jca/">trunk/jca</a></dt>
        <dd>
          This package includes a JCA resource adapter for Jackrabbit. It's following the JCA 1.0
          specification and can be deployed on a wide range of application servers.
        </dd>
        <dt><a href="http://svn.apache.org/repos/asf/jackrabbit/trunk/jcr-rmi/">trunk/jcr-rmi</a></dt>
        <dd>
          JCR-RMI is a transparent Remote Method Invocation (RMI) layer for
          the Content Repository for Java Technology API (JCR). The layer makes
          it possible to remotely access JCR content repositories. JCR-RMI is
          developed as a part of the incubating Apache Jackrabbit project, but
          the implementation is compatible with all JCR content repositories.
        </dd>
        <dt><a href="http://svn.apache.org/repos/asf/jackrabbit/trunk/jcr-server/">trunk/jcr-server</a></dt>
        <dd>
          This package includes a WebDAV library and WebDAV based JCR client/server
          connection facility.
        </dd>
        <dt><a href="http://svn.apache.org/repos/asf/jackrabbit/trunk/textfilters/">trunk/textfilters</a></dt>
        <dd>
          This project contains TextFilter implementations for the following binary formats:
            <ul>
              <li>Microsoft Excel</li>
              <li>Microsoft PowerPoint</li>
              <li>Microsoft Word</li>
              <li>PDF</li>
              <li>HTML</li>
              <li>OpenOffice Documents</li>
              <li>RTF</li>
              <li>XML</li>
            </ul>
        </dd>
      </dl>
      <p>
        The above list may not include the newest Jackrabbit projects. To see
        the most up to date list of projects, look in the
        <a href="http://svn.apache.org/repos/asf/jackrabbit/trunk/">repository</a>.
      </p>

      <subsection name="Checking out the sources with Subversion">
        <p>
          You need a <a href="http://subversion.tigris.org/">Subversion</a>
          client to access the Jackrabbit source repository. Take a look at the
          <a href="http://subversion.tigris.org/project_links.html#clients">Subversion client list</a>
          unless you already have a one installed. Once you have the Subversion
          client installed you can checkout the main Jackrabbit source tree
          with the following command or its equivalent in the client you are using:
        </p>
  <source>svn checkout http://svn.apache.org/repos/asf/jackrabbit/trunk/jackrabbit</source>
        <p>
          The above checkout will create a subdirectory named
          <code>jackrabbit</code> that contains the latest Jackrabbit sources.
          See the <a href="http://svnbook.red-bean.com/">Subversion book</a> or
          the documentation of your Subversion client for more information on
          how to manage your source tree and keep it up to date with latest
          development.
        </p>
      </subsection>

      <subsection name="Building the sources with Maven">
        <p>
          Jackrabbit uses <a href="http://maven.apache.org/maven-1.x/">Maven</a>
          version 1.x as the build system and the source tree is mostly
          organized according to the Maven
          <a href="http://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html">Standard Directory Layout</a>.
          The Maven version 1.0.2 and Java Development Kit (JDK) version 1.4
          are the standard build environment, but you should be quite fine also
          with Maven 1.1 and Java 5.
        </p>
        <p>
          See the Maven 1.x
          <a href="http://maven.apache.org/maven-1.x/start/install.html">installation</a>
          and <a href="http://maven.apache.org/maven-1.x/start/quick-start.html">quick-start</a>
          guides for instructions on how to use Maven with Jackrabbit. You
          may also want to check for
          <a href="http://mevenide.codehaus.org/">Maven integration</a>
          with your favourite Integrated Development Environment (IDE).
          Common operations to run within the checked out
          <code>jackrabbit</code> directory are:
        </p>
        <dl>
          <dt><code>maven jar</code></dt>
          <dd>
            Compiles the Jackrabbit source files, runs all unit tests and
            packages the Jackrabbit classes into a jar library. This is the
            standard "build all" operation for Jackrabbit. The resulting
            jar package is located in <code>target/jackrabbit-*.jar</code>.
            This operation also generates the <code>jackrabbit-commons</code>
            jar package within the <code>modules/commons</code> subdirectory.
          </dd>
          <dt><code>maven jar:install</code></dt>
          <dd>
            Executes the <code>jar</code> goal and installs the resulting jar
            packages into the local Maven repository. This operation is used
            when you want to make Jackrabbit available as a dependency for
            other local Maven projects. The Maven groupId for Jackrabbit is
            <code>org.apache.jackrabbit</code> and the artifactId is
            <code>jackrabbit</code>.
          </dd>
          <dt><code>maven clean</code></dt>
          <dd>
            Removes the <code>target</code> directory that contains all
            compiled classes and other files generated by the Maven builds.
            This operation is used to clean up the build environment. The
            Maven build system is quite good in keeping all the classes
            and other generated files up to date but every now and then
            you may want to run <code>maven clean jar</code> to do a fresh
            build of the entire project.
          </dd>
          <dt><code>maven copy-deps</code></dt>
          <dd>
            Copies all the Jackrabbit dependencies into the
            <code>target/lib</code> directory. This operation is used as a
            convenient way to get all the Jackrabbit dependencies instead of
            downloading them from the net or looking for them in the local
            Maven repository. Note however that the copied dependencies will
            contain the compile and unit test dependencies in addition to the
            real runtime dependencies of Jackrabbit.
          </dd>
        </dl>
        <p>
          The Jackrabbit test suite is quite extensive, so running
          <code>maven jar</code> may take a while due to the unit tests being
          run. Use <code>maven jar -Dmaven.test.skip=true</code> to skip
          running the unit tests. Note that skipping the unit tests is not
          recommended in general.
        </p>
      </subsection>
    </section>
  </body>
</document>

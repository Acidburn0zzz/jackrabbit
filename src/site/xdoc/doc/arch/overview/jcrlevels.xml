<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  The ASF licenses this file to You
   under the Apache License, Version 2.0 (the "License"); you may not
   use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
  -->
<document>
 <properties>
  <title>Levels of Content Repository API for Java Technology (JSR-170)</title>
 </properties>
 <body>

<section name="Content Repository API for Java Technology">
<p>
Jackrabbit is a complete, and fully compliant implementation of 
the Content Repository API for Java Technology (JCR) and therefore
its primary API is defined by JCR. For a developer this means that
most operations required are defined by the JCR API:
</p>
<p>
Browse JCR v1.0 Javadoc: <a href="http://www.day.com/maven/jsr170/javadocs/jcr-1.0/">http://www.day.com/maven/jsr170/javadocs/jcr-1.0/</a><br />
Download zipped JCR v1.0 Javadoc:<a href="http://www.day.com/maven/jsr170/javadocs/jcr-1.0.javadoc">http://www.day.com/maven/jsr170/javadocs/jcr-1.0.javadoc</a>
</p>
<p>
Beyond the JCR API Jackrabbit features numerous extensions and
administrational features that are needed to run a repository 
but are not (yet) specified by JCR. (see <a href="arch/overview.html">Architecture Overview</a>)
</p>
<p>
Browse current Jackrabbit API: <a href="http://jackrabbit.apache.org/api-1/index.html">http://jackrabbit.apache.org/api-1/index.html</a>
</p>
</section>
<section name="JSR-170 Levels">
<p>
The Content Repository API for Java Technology (JSR-170) is split into different
Levels of compliancy, to allow Repository Vendors to gradually adopt JSR-170
and to avoid that the overhead is unnecessarily high for repository vendors
that only want to expose portions of their repository functionality through
a JSR-170 compliant Interface.
</p>
<p>
JSR-170 specifies a Level 1, a Level 2 and a set of advanced repository 
feature blocks. Jackrabbit is fully JSR-170 compliant and therefore
supports Level 1, Level 2 and all the optional blocks.
</p>
</section>

<section name="Level 1 : Ease of Adoption, Covering many usecases">
<p>
The Scope of Level 1 of JSR-170 to cover a large number of simple 
Applications, that need to search repositories and need to read 
from repositories.
Level 1 specifies a read-only API that allows to 
introspect Node and Property-types and offers hierarchical
read access to content stored in a repository.
</p>
<img src="../../../images/arch/level-1.jpg"/>
<p>
Level 1 of JSR-170 is geared to allow people to write 
applications such as search and display Portlets, 
CMS-Templates, Reports, Exports or other applications 
that harvest, search, present or display information 
from one or multiple repositories.
</p>
</section>

<section name="Level 2 : Writeable Repository">
<p>
Level 2 of JSR-170 specifies all the writing 
capabilities need to bi-directionally interact with a
content repository in a fine and coarse grained 
fashion.
</p>
<img src="../../../images/arch/level-2.jpg"/>
<p>
Applications written against Level 2 of JSR-170 include
management applications or generally speaking any 
application that generates data, information or content
for both structured and unstructured information.
</p>
</section>

<section name="Advanced Options">
<p>
On top of Level 1 or Level 2 a number of functional 
block serve for more advanced repository functionality.
This includes functions like: Versioning, 
(JTA) Transactions, Query using SQL, Explicit 
Locking and Content Observation.
</p>
<img src="../../../images/arch/level-adv.jpg" />
<p>
A fully JSR-170 compliant repository like Jackrabbit
encompasses all the functionalities and therefore
lends itself as general purpose, off-the-shelf 
infrastructure for Content-, Document- and
Source Code Management or for just about any 
other application that persists content.
</p>
</section>
</body>
</document>

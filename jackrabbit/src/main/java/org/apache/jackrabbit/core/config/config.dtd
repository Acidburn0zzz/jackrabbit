<!--
/*
 * Copyright 2004-2005 The Apache Software Foundation or its licensors,
 *                     as applicable.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<!--
    the Repository element configures a repository instance;
    individual workspaces of the repository are configured through
    separate configuration files called workspace.xml which are
    located in a subfolder of the workspaces root directory
    (see Workspaces element).

    it consists of

        a FileSystem element (the virtual file system
        used by the repository to persist global state such as
        registered namespaces, custom node types, etc..

        a Security element that specifies the name of the app-entry
        in the JAAS config and the access manager

        a Workspaces element that specifies to the location of
        workspaces root directory, the name of default workspace
        and optionally the workspace configuration root directory
        within the virtual repository file system

        a Workspace element that is used as a workspace configuration
        template; it is used to create the initial workspace if there's
        no workspace yet and for creating additional workspaces through
        the api

        a SearchIndex element that is used for configuring per workspace
        Indexing-related settings

        a Versioning element that is used for configuring
        versioning-related settings
-->
<!ELEMENT Repository (FileSystem,Security,Workspaces,Workspace,Versioning)>

<!--
    a virtual file system
-->
<!ELEMENT FileSystem (param*)>
<!ATTLIST FileSystem
  class CDATA #REQUIRED>

<!--
    the Security element specifies the name (appName attribute)
    of the JAAS configuration app-entry for this repository.

    it also specifies the access manager to be used (AccessManager element).
-->
<!ELEMENT Security (AccessManager, LoginModule?)>
<!ATTLIST Security
  appName CDATA #REQUIRED>

<!--
    the AccessManager element configures the access manager to be used by
    this repository instance; the class attribute specifies the FQN of the
    class implementing the AccessManager interface
-->
<!ELEMENT AccessManager (param*)>
<!ATTLIST AccessManager
  class CDATA #REQUIRED>

<!--
    generic parameter (name/value pair)
-->
<!ELEMENT param EMPTY>
<!ATTLIST param
  name CDATA #REQUIRED
  value CDATA #REQUIRED>

<!--
    the LoginModule element optionally specifies a JAAS login module to
    authenticate users. This feature allows the use of Jackrabbit in a
    non-JAAS environment.
-->
<!ELEMENT LoginModule (param*)>
<!ATTLIST LoginModule
  class CDATA #REQUIRED>

<!--
    the Workspaces element specifies the physical workspaces root directory
    (rootPath attribute), the name of the default workspace
    (defaultWorkspace attribute) and optionally the workspace configuration
    root directory within the virtual repository file system (configRootPath
    attribute).

    individual workspaces are configured through individual workspace.xml
    files located in a subfolder each of either

    a) the physical workspaces root directory

    or, if configRootPath had been specified,

    b) the configuration root directory within the virtual repository file system.
-->
<!ELEMENT Workspaces EMPTY>
<!ATTLIST Workspaces
    rootPath CDATA #REQUIRED
    defaultWorkspace CDATA #REQUIRED
    configRootPath CDATA #IMPLIED>

<!--
    the Workspace element serves as a workspace configuration template;
    it is used to create the initial workspace if there's no workspace yet
    and for creating additional workspaces through the api
-->
<!ELEMENT Workspace (FileSystem,PersistenceManager,SearchIndex?)>
<!ATTLIST Workspace
  name CDATA #REQUIRED>

<!--
    the PersistenceManager element configures the persistence manager
    to be used for the workspace; the class attribute specifies the
    FQN of the class implementing the PersistenceManager interface
-->
<!ELEMENT PersistenceManager (param*)>
<!ATTLIST PersistenceManager
  class CDATA #REQUIRED>

<!--
    the SearchIndex element specifies the locaction of the search index
    (used by the QueryHandler); the class attribute specifies the
    FQN of the class implementing the QueryHandler interface.
-->
<!ELEMENT SearchIndex (param*,FileSystem?)>
<!ATTLIST SearchIndex
  class CDATA #REQUIRED>

<!--
    the Versioning element configures the persistence manager
    to be used for persisting version state
-->
<!ELEMENT Versioning (FileSystem, PersistenceManager)>
<!ATTLIST Versioning
  rootPath CDATA #REQUIRED
>
